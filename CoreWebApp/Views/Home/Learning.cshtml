@page
@model CoreWebApp.Views.Home.LearningModel
@{
}

<div class="container-fluid">
    <ul class="list-group">
        @{
            if (Model.State.PreviousWasRight)
            {
                @Html.Raw("<li class=\"list-group-item list-group-item-success\">Das war richtig!</li>");
            }
            else if(!Model.State.IsFirst)
            {
                @Html.Raw("<li class=\"list-group-item list-group-item-warning\">Das war leider falsch! Richtig wäre " + Model.State.Current.Number + ".</li>");
            }
        }
        <li class="list-group-item">
            <div class="row">
                <div class="col-sm-auto">
                    <img src="data:image/png;base64,@Html.DisplayFor(model => model.State.Current.ImageData)" />
                </div>
                <div class="col-sm-auto">
                    <h2>@Html.DisplayFor(model => model.State.Current.Name)</h2>
                </div>
            </div>
        </li>
        <li class="list-group-item">
            <form method="post">
                <div class="btn-group-vertical ml-4 mt-4" role="group" aria-label="Basic example">
                    <div class="btn-group">
                        <input class="text-center form-control-lg mb-2" id="code" value="@Model.Code" asp-for="Code">
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '1';">1</button>
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '2';">2</button>
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '3';">3</button>
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '4';">4</button>
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '5';">5</button>
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '6';">6</button>
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '7';">7</button>
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '8';">8</button>
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '9';">9</button>
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value.slice(0, -1);">&lt;</button>
                        <button type="button" class="btn btn-outline-secondary py-3" onclick="document.getElementById('code').value=document.getElementById('code').value + '0';">0</button>
                        <button type="submit" class="btn btn-primary py-3">OK</button>
                    </div>
                </div>
            </form>
        </li>
    </ul>
</div>





<p>Remaining: @String.Join(",", Model.State.RemainingIds.Select(x => x.ToString()))</p>
<p>Correct: @String.Join(",", Model.State.CorrectIds.Select(x => x.ToString()))</p>
<p>Current: @Model.State.Current?.Id</p>
<p>Previous was right: @(Model.State.PreviousWasRight ? "Yes" : "No")</p>
<p>Victory: @(Model.State.RemainingIds.Count == 0 ? "Yes" : "No")</p>